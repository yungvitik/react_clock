{"version":3,"sources":["components/clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timeInterval","this","window","setInterval","setState","console","log","clearInterval","style","color","fontWeight","React","Component","App","isClockVisible","clockName","showClock","hideClock","setRandomName","Math","floor","random","_prevProps","prevState","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,kBALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,IAAQN,EAAS,EAAKD,MAAdC,KAER,EAAKO,SAAS,CAAEP,MAAM,IAAIC,MAAOC,uBAGjCM,QAAQC,IAAIT,KACX,OAfP,kCAkBE,WACEU,cAAcN,KAAKD,gBAnBvB,oBAsBE,WACE,IAAQH,EAASI,KAAKL,MAAdC,KAER,OACE,sBAAMW,MAAO,CAAEC,MAAO,cAAeC,WAAY,KAAjD,SACIb,QA3BV,GAA2Bc,IAAMC,WCDpBC,EAAb,4MACEjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,IAHf,EAaEC,UAAY,WACV,EAAKZ,SAAS,CAAEU,gBAAgB,KAdpC,EAiBEG,UAAY,WACV,EAAKb,SAAS,CAAEU,gBAAgB,KAlBpC,EAqBEI,cAAgB,WACd,EAAKd,SAAS,CAAEW,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,aAtB/C,wDAME,SAAmBC,EAA0BC,GACvCA,EAAUR,YAAcd,KAAKL,MAAMmB,WAErCV,QAAQC,IAAR,qCAA0CiB,EAAUR,UAApD,eAAoEd,KAAKL,MAAMmB,cATrF,oBAyBE,WACE,MAAsCd,KAAKL,MAAnCmB,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,eAEnB,OACE,sBAAKU,UAAU,MAAf,UACE,mDAAoBT,KACpB,8CAEG,IACAD,GAAkB,cAAC,EAAD,CAAOC,UAAWA,OAGvC,wBACEU,KAAK,SACLC,QAASzB,KAAKgB,UAFhB,wBAOA,wBACEQ,KAAK,SACLC,QAASzB,KAAKe,UAFhB,wBAOA,wBACES,KAAK,SACLC,QAASzB,KAAKiB,cAFhB,oCAnDR,GAAyBP,IAAMC,WCN/Be,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bd4e6d2f.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  time: string;\n};\n\ntype Props = {\n  clockName: number;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timeInterval: number | undefined;\n\n  componentDidMount() {\n    this.timeInterval = window.setInterval(() => {\n      const { time } = this.state;\n\n      this.setState({ time: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line\n      console.log(time);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeInterval);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <span style={{ color: 'yellowgreen', fontWeight: 700 }}>\n        { time }\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/clock/Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 51, // my fav number\n  };\n\n  componentDidUpdate(_prevProps: Readonly<{}>, prevState: Readonly<State>) {\n    if (prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  setRandomName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 1000) });\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{`React clock ${clockName}`}</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible && <Clock clockName={clockName} /> }\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}